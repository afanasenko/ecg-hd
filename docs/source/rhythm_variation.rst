
Статистический анализ вариабельности сердечного ритма
#####################################################

Алгоритм
--------
Алгоритм расчета параметров описан в документе Наташи.


Интерфейс
---------

Расчет статистических характеристик вариабельности сердечного ритма
выполняется функцией *rhythm_stats*:

:
    from cardio_clean.statvariation import rhythm_stats

:
    metrics = rhythm_stats(metadata):

    metrics
    {
     "SDNN": 73.62313799711724,
     "SDNNi": 36.29170836692598,
     "pNN50": 14.634146341463415,
     "SDANN": 73.5407942933451,
     "RRmean": 513.219512195122,
     "RMSSD": 35.995901475446146
    }


Входные параметры
^^^^^^^^^^^^^^^^^

Параметр metadata: список метаданных для последовательности кардиоциклов.
Используется только для чтения. Требуется наличие следующих ключей для
каждого кардиоцикла:

- qrs_center
- RR

Выходные значения
^^^^^^^^^^^^^^^^^

Функция rhythm_stats возвращает словарь metrics с фиксированным набором ключей

Вычисляемые параметры: RRmean, SDNN, pNN50, SDANN, RMSSD, SDNNi.
Все параметры имеют размерность [мс].
При отсутствии достаточного числа нормальных qrs-комплексов все или часть
параметров могут иметь значение None.

Спектральный анализ вариабельности сердечного ритма
###################################################

Алгоритм
--------

1. Из метаданных каждого кардиоцикла извлекаются положение центра и значение
   RR-интервала.
2. Артефакты и экстрасистолы отбрасываются.
3. С помощью интреполяции sin(x)/x рассчитывается сигнал ритма с равномерной дискретизацией.
4. Вычитается постоянная составляющая (средний ритм).
5. Рассчитывается быстрое преобразование Фурье.
6. Рассчитывается модуль комплексного спектра (амплитудный спектр).
7. Полученные спектральные составляющие разбиваются на диапазоны с заданными
   частотными границами.
8. В каждом диапазоне вычисляется мощность (сумма квадратов спектральных
   составляющих амплитудного спектра).
9. Значения мощности во всех диапазонах нормируются, чтобы их сумма была равна единице.

При разбиении спектра используются седующие частотные диапазоны:

- HF — высокочастотный (0,15-0,4 Гц). HF-компонента признана как маркер
  активности парасимпатической системы.
- LF — низкочастотный (0,04-0,15 Гц). Интерпретация LF-компоненты является
  более противоречивой. Одними исследователями она трактуется как маркер
  симпатической модуляции, другими — как параметр, включающий симпатическое и вагусное влияние.
- VLF — очень низкочастотный (0,003-0,04 Гц). Происхождение VLF и ULF-компонент
  нуждается в дальнейшем изучении. По предварительным данным, VLF отражает активность
  симпатического подкоркового центра регуляции.
- ULF — ультранизкочастотный (< 0,003 Гц). Для 5-минутной записи ЭКГ
  оценка и интерпретация ULF-компоненты некорректна из-за нарушения требуемого
  соотношения между длительностью регистрации и нижней частотой спектра.
  Поэтому использование данной компоненты оправдано лишь при 24-часовом исследовании ЭКГ.

Интерфейс
---------

Расчет частотных составляющих сердечного ритма выполняется функцией
*rhythm_spectrum*:

:
    from cardio_clean.spectralvariation import rhythm_spectrum

:
    rhythm_spectrum(metadata, **kwargs):

Входные параметры
^^^^^^^^^^^^^^^^^

Параметр metadata: список метаданных для последовательности кардиоциклов.
Используется только для чтения. Требуется наличие следующих ключей для
каждого кардиоцикла:

- qrs_center
- RR
- flags

В kwargs могут быть переданы необязательные параметры:

- freq_bands - список границ частотных диапазонов (Гц)
- sampling - желаемая частота дискретизации сигнала ритма (Гц).

По умолчанию эти значения берутся из файла config.yaml, секция RSVAR:

sampling: 0.8 (частота дискретизации отчсчетов ритма в герцах)

freq_bands: (границы частотных диапазонов)

- 0.0
- 0.003
- 0.04
- 0.15
- 0.4

Значения freq_bands должны начинаться с нуля и идти в порядке возрастания.
Частота дискретизации отсчетов ритма (sampling) должа быть как минимум
вдвое превышать максимальную (последнюю) частоту, указанную во freq_bands.

Выходные значения
^^^^^^^^^^^^^^^^^

- results - словарь с оцениваемыми параметрами
- retn - относительная мощность спектра в заданных диапазонах
- fp - частоты для построения амплитудного спектра
- sp - значения для построения амплитудного спектра

results содержит следующие значения

- "TP" [мс2] общая мощность
- "ULF" [мс2] мощность в диапазоне < 0,003 Гц (не имеет смысла для коротких
  записей)
- "VLF" [мс2] мощность в диапазоне 0,003 - 0,04 Гц
- "LF" [мс2] мощность в диапазоне 0,04 - 0,15 Гц
- "HF" [мс2] мощность в диапазоне 0,15 - 0,4 Гц
- "LFn" [%] нормированная мощность в диапазоне LF
- "HFn" [%] нормированная мощность в диапазоне HF
- "LFHF" [безразамерная] отношение LF / HF

retn представляет собой список, в каждом элементе которого содержатся данные
об одной полосе частот.

retn = [
  (f1, f2, pw),
  ...
]

где f1 и f2 - границы частотного диапазона, определяемые
входным параметром freq_bands, pw - относительная мощность спектра в данном
диапазоне. Данные о спектральной мощности нормализованы таким образом, что
сумма всех значений pw равна единице.

Значения fp и sp предназначены для разработки и отладки.

Пример расчета статистической и спектральной вариабельности
===========================================================

Упрощенный вариант, без коррекции входного сигнала

::
    from cardio_clean.spectralvariation import rhythm_spectrum
    from cardio_clean.util import ecgread
    from cardio_clean.wavdetect import find_points
    from cardio_clean.qrsdetect import qrs_detection

    sig, header = ecgread(filename)

    metadata, foo = qrs_detection(
        sig,
        fs=header["fs"]
    )

    find_points(
        sig,
        fs=header["fs"],
        bias=header["baseline"],
        metadata=metadata
    )

    metadata_postprocessing(
        metadata,
        sig,
        header
    )

    stat_var = rhythm_stats(metadata)
    
    spectr_var = rhythm_spectrum(metadata)[0]
